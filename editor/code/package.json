{
  "name": "coq-lsp",
  "displayName": "Coq LSP",
  "description": "Coq LSP provides native vsCode support for checking Coq proof documents",
  "version": "0.1.4",
  "contributors": [
    "Emilio Jes√∫s Gallego Arias <e@x80.org>",
    "Ali Caglayan <alizter@gmail.com>",
    "Shachar Itzhaky <shachari@cs.technion.ac.il>",
    "Ramkumar Ramachandra <r@artagnon.com>"
  ],
  "publisher": "ejgallego",
  "engines": {
    "vscode": "^1.73.0"
  },
  "categories": [
    "Programming Languages",
    "Linters"
  ],
  "keywords": [
    "interactive theorem proving",
    "dependent types",
    "coq",
    "software verification"
  ],
  "homepage": "https://github.com/ejgallego/coq-lsp",
  "repository": {
    "type": "git",
    "url": "https://github.com/ejgallego/coq-lsp"
  },
  "contributes": {
    "languages": [
      {
        "id": "coq",
        "aliases": [
          "Coq",
          "coq",
          "Gallina",
          "gallina"
        ],
        "extensions": [
          ".v",
          ".mv"
        ],
        "configuration": "./coq.configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "coq",
        "scopeName": "source.coq",
        "path": "./syntaxes/coq.json"
      }
    ],
    "commands": [
      {
        "command": "coq-lsp.restart",
        "title": "Coq LSP: Restart Language Server"
      },
      {
        "command": "coq-lsp.goals",
        "title": "Coq LSP: Show Goals at Point"
      }
    ],
    "keybindings": [
      {
        "command": "coq-lsp.goals",
        "key": "alt+enter",
        "mac": "meta+enter",
        "when": "editorTextFocus && editorLangId == coq"
      }
    ],
    "configuration": [
      {
        "title": "Diagnostics",
        "type": "object",
        "properties": {
          "coq-lsp.eager_diagnostics": {
            "type": "boolean",
            "default": true,
            "description": "Send diagnostics as document is processed; if false, diagnostics are only sent when Coq finishes processing the file"
          },
          "coq-lsp.ok_diagnostics": {
            "type": "boolean",
            "default": false,
            "description": "Send a diagnostic for sentences that are Ok; this can choke vsCode easily due to too many diagnostics"
          },
          "coq-lsp.show_coq_info_messages": {
            "type": "boolean",
            "default": false,
            "description": "Show Coq's \"Info\" messages as diagnostics, such as 'foo has been defined.' and miscellaneous operational messages."
          },
          "coq-lsp.show_notices_as_diagnostics": {
            "type": "boolean",
            "default": false,
            "description": "Show Coq's \"Notice\" messages as diagnostics, such as `About` and `Search` output."
          }
        }
      },
      {
        "title": "Goals and Info Panel",
        "type": "object",
        "properties": {
          "coq-lsp.goal_after_tactic": {
            "type": "boolean",
            "default": false,
            "description": "When showing goals and the cursor is in a tactic, if false, show goals before executing the tactic, if true, show goals after"
          },
          "coq-lsp.show_goals_on": {
            "type": "number",
            "default": 3,
            "description": "When to show goals and information about the current cursor",
            "enum": [
              0,
              1,
              2,
              3
            ],
            "enumItemLabels": [
              "Don't follow cursor",
              "Show on click",
              "Show on click and on cursor movement",
              "Show on click, cursor, and command movement"
            ]
          }
        }
      },
      {
        "title": "Language Server Binary",
        "type": "object",
        "properties": {
          "coq-lsp.trace.server": {
            "scope": "window",
            "type": "string",
            "enum": [
              "off",
              "messages",
              "verbose"
            ],
            "default": "messages",
            "description": "Traces the communication between VS Code and the language server."
          },
          "coq-lsp.path": {
            "type": "string",
            "default": "coq-lsp",
            "description": "Path to the coq-lsp binary, by default, search in PATH"
          },
          "coq-lsp.args": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Arguments to the coq-lsp server"
          }
        }
      },
      {
        "title": "Proof Checking",
        "type": "object",
        "properties": {
          "coq-lsp.admit_on_bad_qed": {
            "type": "boolean",
            "default": true,
            "description": "If a `Qed.` command fails, admit the proof automatically."
          }
        }
      }
    ]
  },
  "devDependencies": {
    "@types/node": "^16.11.7",
    "@types/throttle-debounce": "^5.0.0",
    "@types/vscode-webview": "^1.57.1",
    "@types/vscode": "^1.73.0",
    "esbuild": "^0.16.13",
    "prettier": "^2.8.1",
    "typescript": "^4.9.4"
  },
  "dependencies": {
    "throttle-debounce": "^5.0.0",
    "vscode-languageclient": "^8.0.2"
  },
  "main": "./out/src/client.js",
  "scripts": {
    "vscode:prepublish": "npm run typecheck && npm run esbuild -- --minify --sourcemap=no",
    "esbuild": "node esbuild.mjs",
    "typecheck": "tsc -b",
    "compile": "npm run esbuild",
    "watch": "npm run esbuild -- --watch"
  }
}
