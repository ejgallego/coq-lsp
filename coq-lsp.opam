synopsis: "Language Server Protocol native server for Coq"
description:
"""
Language Server Protocol native server for Coq
"""
opam-version: "2.0"
maintainer: "e@x80.org"
bug-reports: "https://github.com/ejgallego/coq-lsp/issues"
homepage: "https://github.com/ejgallego/coq-lsp"
dev-repo: "git+https://github.com/ejgallego/coq-lsp.git"
authors: [
  "Emilio Jes√∫s Gallego Arias <e@x80.org>"
  "Ali Caglayan <alizter@gmail.com>"
  "Shachar Itzhaky <shachari@cs.technion.ac.il>"
  "Ramkumar Ramachandra <r@artagnon.com>"
]
license: "LGPL-2.1-or-later"
doc: "https://ejgallego.github.io/coq-lsp/"

depends: [

  ("ocaml" {>= "5.0"} | ("ocaml" {<= "5.0"} & "memprof-limits" { >= "0.2.1" } ))

  "dune"         { >= "3.2.0" }

  # lsp dependencies
  "cmdliner"     { >= "1.1.0" }
  "yojson"       { >= "1.7.0" }
  "uri"          { >= "4.2.0" }
  "dune-build-info" { >= "3.2.0" }

  # waterproof json parser
  "menhir"       { >= "20220210" }

  # unit testing
  "ppx_inline_test"     { >= "v0.15.0" }

  # Uncomment this for releases
  "coq"          { >= "8.18" < "8.19"  }

  # result dep, fixed in main, but kept for older releases
  "result"              { >= "1.5" }

  # This is now a hard dep due to API changes in 1.9.7
  "ocamlfind" { >= "1.9.8" }

  # serlib dependencies
  "ppx_deriving"        { >= "5.2"                 }
  "ppx_deriving_yojson" { >= "3.7.0"               }
  "ppx_import"          { >= "1.11.0"              }
  "sexplib"             { >= "v0.15.0" & < "v0.18" }
  "ppx_sexp_conv"       { >= "v0.15.0" & < "v0.18" }
  "ppx_compare"         { >= "v0.15.0" & < "v0.18" }
  "ppx_hash"            { >= "v0.15.0" & < "v0.18" }
]

# older results get in mess with ppx_deriving, we cannot control how
# it gets pulled, often in min-bound rev-dep, so we conflict with it
conflicts: [ "result" { < "1.5" } ]

depopts: ["lwt" "logs"]

build: [
  [ "rm" "-rf" "vendor" ]
  [ "dune" "build" "-p" name "-j" jobs ]
]
run-test: [ [ "dune" "runtest" "-p" name "-j" jobs ] ]
